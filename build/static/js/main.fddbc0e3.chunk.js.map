{"version":3,"sources":["Confetti.js","App.jsx","index.js"],"names":["props","useWindowSize","width","height","numberOfPieces","useStyles","makeStyles","theme","main","padding","header","margin","color","subHeader","fontWeight","body","fontSize","content","quote","fontStyle","closing","fontFamily","divider","fullWidth","flex","display","flexCenter","submit","emojiStatus","input","background","status","App","classes","useState","subscribeOpen","setSubscribeOpen","setStatus","handleStatus","CustomForm","formStatus","message","onValidated","statusMessage","setStatusMessage","form","setForm","errors","setErrors","handleFormChange","e","target","name","value","tmp","useEffect","includes","Grid","container","spacing","item","xs","sm","className","style","clsx","role","aria-label","Typography","align","variant","component","TextField","autoComplete","label","onChange","placeholder","InputLabelProps","shrink","error","helperText","type","Button","onClick","size","backgroundColor","startIcon","Confetti","Dialog","onClose","aria-labelledby","open","dialog","DialogTitle","id","DialogContent","url","render","subscribe","formData","alignItems","justify","md","lg","textDecoration","cursor","borderRadius","border","marginTop","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.fddbc0e3.chunk.js","sourcesContent":["import React from \"react\";\r\nimport useWindowSize from \"react-use/lib/useWindowSize\";\r\nimport Confetti from \"react-confetti\";\r\n\r\nexport default props => {\r\n  const { width, height } = useWindowSize();\r\n  return (\r\n    <Confetti\r\n      width={width}\r\n      height={height}\r\n      numberOfPieces={props.numberOfPieces}\r\n    />\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport MailchimpSubscribe from \"react-mailchimp-subscribe\";\r\nimport Confetti from \"./Confetti\";\r\n\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  TextField,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  Button\r\n} from \"@material-ui/core\";\r\n\r\nimport HandIcon from \"@material-ui/icons/PanTool\";\r\n\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  main: {\r\n    padding: \"2rem\"\r\n  },\r\n  header: {\r\n    margin: \"2rem\",\r\n    color: \"#1A237E\"\r\n  },\r\n  subHeader: {\r\n    margin: \"2rem\",\r\n    fontWeight: \"bold\",\r\n    color: \"#373D3F\"\r\n  },\r\n  body: {\r\n    fontSize: \"1.6rem\"\r\n  },\r\n  content: {\r\n    margin: \"2rem 0rem\",\r\n    color: \"#373D3F\",\r\n    fontWeight: \"lighter\"\r\n  },\r\n  quote: {\r\n    fontStyle: \"italic\",\r\n    margin: \"2rem 0rem\",\r\n    fontSize: \"1.2rem\"\r\n  },\r\n  closing: {\r\n    fontFamily: \"Caveat\"\r\n  },\r\n  divider: {\r\n    margin: \"5rem 0rem\"\r\n  },\r\n  fullWidth: {\r\n    width: \"100%\"\r\n  },\r\n  flex: {\r\n    display: \"flex\"\r\n  },\r\n  flexCenter: {\r\n    margin: \"auto\"\r\n  },\r\n  submit: {\r\n    margin: \"2rem 0rem\"\r\n  },\r\n  emojiStatus: {\r\n    fontSize: \"80px\"\r\n  },\r\n  input: {\r\n    background: \"white\"\r\n  },\r\n  status: {\r\n    margin: \"1rem 0\"\r\n  }\r\n}));\r\n\r\nconst mailchimpUrl =\r\n  \"https://betterfriendapp.us4.list-manage.com/subscribe/post?u=b9495e03a31ea97485ed32c15&amp;id=8b96342f9e\";\r\n\r\nfunction App() {\r\n  const classes = useStyles();\r\n  const [subscribeOpen, setSubscribeOpen] = useState(false);\r\n  const [status, setStatus] = useState();\r\n\r\n  const handleSubscribeClose = () => {\r\n    setSubscribeOpen(false);\r\n  };\r\n\r\n  const handleStatus = status => {\r\n    setStatus(status);\r\n  };\r\n  const btnStyle = {\r\n    background: \"orange\",\r\n    color: \"white\",\r\n    fontSize: \"24px\",\r\n    borderRadius: \"8px\",\r\n    border: \"0\",\r\n    padding: \"10px 20px\",\r\n    marginTop: \"20px\",\r\n    width: \"100%\"\r\n  }\r\n  const CustomForm = ({ formStatus, message, onValidated, handleStatus }) => {\r\n    const invalidEmailMsg = \"Please enter a valid email!\";\r\n\r\n    const [status, setStatus] = useState(\"\");\r\n    const [statusMessage, setStatusMessage] = useState(\"\");\r\n    const [form, setForm] = useState({});\r\n    const [errors, setErrors] = useState({});\r\n\r\n    const submitForm = () => {\r\n      // HANDLE ERROR VALIDATION\r\n      if (!form[\"EMAIL\"].includes(\"@\")) {\r\n        let tmp = { ...errors };\r\n        tmp[\"EMAIL\"] = invalidEmailMsg;\r\n        setErrors({ ...tmp });\r\n      }\r\n\r\n      // IF NO ERRORS, SEND TO onValidated()\r\n      else {\r\n        onValidated(form);\r\n        \r\n      }\r\n    };\r\n\r\n    const handleFormChange = e => {\r\n      const { name, value } = e.target;\r\n      let tmp = { ...form };\r\n      tmp[name] = value;\r\n\r\n      setForm({ ...tmp });\r\n\r\n      // RESET ERRORS\r\n      setErrors({});\r\n    };\r\n\r\n    useEffect(() => {\r\n      let tmp = formStatus;\r\n\r\n      if (message) {\r\n        if (message.includes(\"email address is invalid\"))\r\n          setStatusMessage(\"Seems your email address is invalid...\");\r\n        else if (message.includes(\"already subscribed\")) {\r\n          setStatusMessage(\r\n            \"Seems you're already subscribed. Let's celebrate anyway!\"\r\n          );\r\n          tmp = \"subscribed\";\r\n        } else if (message.includes(\"too many recent signup requests\"))\r\n          setStatusMessage(\r\n            \"Seems you've been trying to sign up too many times...\"\r\n          );\r\n        else if (formStatus === \"success\")\r\n          setStatusMessage(\"Thank you so much. Here's to better friendships!\");\r\n      }\r\n\r\n      setStatus(tmp);\r\n      handleStatus(tmp);\r\n    }, [formStatus, message]);\r\n\r\n    return (\r\n      <Grid container spacing={1}>\r\n        <Grid item xs={12} sm={5}>\r\n          <div className={classes.flex}>\r\n            <div className={classes.flexCenter}>\r\n              <div>\r\n                <div className={classes.flex}>\r\n                  <div className={classes.flexCenter}>\r\n                    <span\r\n                      style={{ width: \"100%\" }}\r\n                      className={clsx(classes.flexCenter, classes.emojiStatus)}\r\n                    >\r\n                      {status === \"subscribed\" ? (\r\n                        <span role=\"img\" aria-label=\"face with hearts emoji\">\r\n                          🥰\r\n                        </span>\r\n                      ) : status === \"success\" ? (\r\n                        <span role=\"img\" aria-label=\"party emoji\">\r\n                          🥳\r\n                        </span>\r\n                      ) : status === \"error\" ? (\r\n                        <span role=\"img\" aria-label=\"investigate emoji\">\r\n                          🧐\r\n                        </span>\r\n                      ) : (\r\n                        <span role=\"img\" aria-label=\"cheery emoji\">\r\n                          😄\r\n                        </span>\r\n                      )}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n                <Typography\r\n                  className={classes.status}\r\n                  align=\"center\"\r\n                  variant=\"caption\"\r\n                  component=\"p\"\r\n                >\r\n                  {statusMessage || \"\"}\r\n                </Typography>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={12} sm={7}>\r\n          <TextField\r\n            autoComplete=\"off\"\r\n            label=\"Name\"\r\n            onChange={handleFormChange}\r\n            name=\"NAME\"\r\n            placeholder=\"Firstname Lastname\"\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            className={classes.input}\r\n            InputLabelProps={{\r\n              shrink: true\r\n            }}\r\n          />\r\n          <TextField\r\n            autoComplete=\"off\"\r\n            label=\"Email\"\r\n            placeholder=\"You@domain.com\"\r\n            onChange={handleFormChange}\r\n            name=\"EMAIL\"\r\n            error={errors[\"EMAIL\"] ? true : false}\r\n            helperText={errors[\"EMAIL\"] || \"\"}\r\n            type=\"email\"\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            className={classes.input}\r\n            InputLabelProps={{\r\n              shrink: true\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} className={clsx(classes.submit, classes.flex)}>\r\n          <div className={classes.flexCenter}>\r\n            <Button\r\n              onClick={submitForm}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              size=\"large\"\r\n              style={{ backgroundColor: \"#ffbd44\" }}\r\n              startIcon={<HandIcon />}\r\n            >\r\n              Sign me up\r\n            </Button>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {status === \"success\" || status === \"subscribed\" ? (\r\n        <Confetti numberOfPieces={300} />\r\n      ) : (\r\n        \"\"\r\n      )}\r\n\r\n      <Dialog\r\n        onClose={handleSubscribeClose}\r\n        aria-labelledby=\"subscribe-dialog-title\"\r\n        open={subscribeOpen}\r\n        className={classes.dialog}\r\n      >\r\n        <DialogTitle\r\n          style={{ backgroundColor: \"#7ac5ff\", color: \"white\" }}\r\n          id=\"subscribe-dialog-title\"\r\n        >\r\n          Stay Updated\r\n        </DialogTitle>\r\n        <DialogContent\r\n          style={{ backgroundColor: \"#e9faff\" }}\r\n          className={classes.dialog}\r\n        >\r\n          <MailchimpSubscribe\r\n            url={mailchimpUrl}\r\n            render={({ subscribe, status, message }) => (\r\n              <CustomForm\r\n                handleStatus={handleStatus}\r\n                formStatus={status}\r\n                message={message}\r\n                onValidated={formData => subscribe(formData)}\r\n              />\r\n            )}\r\n          />\r\n        </DialogContent>\r\n      </Dialog>\r\n      <Grid\r\n        container\r\n        alignItems=\"center\"\r\n        justify=\"center\"\r\n        className={classes.main}\r\n      >\r\n        {/* <Grid item xs={12} sm={10} md={8} lg={6} xl={4}> */}\r\n        <Grid item xs={10} sm={8} md={6} lg={4}>\r\n          <Typography className={classes.header} variant=\"h2\" align=\"center\">\r\n            Hey,\r\n          </Typography>\r\n\r\n          <Typography\r\n            className={clsx(classes.subHeader)}\r\n            variant=\"h5\"\r\n            align=\"center\"\r\n          >\r\n            Let’s talk about social media.\r\n          </Typography>\r\n\r\n          {/*<Typography\r\n            variant=\"body1\"\r\n            className={clsx(classes.body, classes.content)}\r\n          >\r\n            It all started out so innocent. Tom just wanted to be our friend.\r\n            The Zuck promised us a better way to stay connected.\r\n          </Typography>*/}\r\n\r\n          <Typography\r\n            variant=\"body1\"\r\n            className={clsx(classes.body, classes.content)}\r\n          >\r\n            Elon Musk is right: Facebook is lame. Ads, unsolicited\r\n            political opinions, poorly-drawn memes, and post after post of\r\n            mindless garbage. It’s enough to make you go crazy{\" \"}\r\n            <span role=\"img\" aria-label=\"mind blown emoji\">\r\n              🤯\r\n            </span>\r\n            .\r\n          </Typography>\r\n\r\n          <Typography\r\n            variant=\"body1\"\r\n            className={clsx(classes.body, classes.content)}\r\n          >\r\n            <span className=\"strong\">But, it doesn't <em> have </em> to stay like this.</span>\r\n          </Typography>\r\n\r\n          <Typography\r\n            variant=\"body1\"\r\n            className={clsx(classes.body, classes.content)}\r\n          >\r\n            What if a service not only helped you stay connected, but actually\r\n            helped improve your friendships? What if instead of being bombarded\r\n            with nonsense, you got what you actually wanted: an easy way to keep\r\n            up with your friends, without the{\" \"}\r\n            <span role=\"img\" aria-label=\"poop emoji\">\r\n              💩\r\n            </span>\r\n            .\r\n          </Typography>\r\n\r\n          <Typography\r\n            variant=\"body1\"\r\n            className={clsx(classes.body, classes.content)}\r\n          >\r\n            We’re a small team of philosopher-hackers{\" \"}\r\n            <span role=\"img\" aria-label=\"nerd emoji\">\r\n              🤓\r\n            </span>{\" \"}\r\n            working on cutting through the noise of existing social media by\r\n            using tech to radically improve people's relationships.\r\n          </Typography>\r\n\r\n          <Typography\r\n            variant=\"body1\"\r\n            className={clsx(classes.body, classes.content)}\r\n          >\r\n            We’ve got a solution we’re launching soon{\" \"}\r\n            <span role=\"img\" aria-label=\"rocket emoji\">\r\n              🚀\r\n            </span>{\" \"}\r\n            and we’re really excited for you to try it.\r\n          </Typography>\r\n\r\n          <Typography\r\n            variant=\"body1\"\r\n            className={clsx(classes.body, classes.content)}\r\n          >\r\n            Click{\" \"}\r\n            <span\r\n              style={{\r\n                textDecoration: \"underline\",\r\n                cursor: \"pointer\",\r\n                color: \"orange\",\r\n                fontWeight:\"bold\",\r\n                textDecoration: \"underline\"\r\n              }}\r\n              onClick={() => setSubscribeOpen(true)}\r\n            >\r\n              here\r\n            </span>{\" \"}\r\n            to subscribe and receive updates, important information, and{\" \"}\r\n            <strong>exclusive BETA access</strong> to the project.\r\n          </Typography>\r\n\r\n          <div className={classes.divider}>\r\n            <Typography variant=\"h5\" className={classes.closing}>\r\n              Sincerely,\r\n            </Typography>\r\n            <Typography variant=\"h4\" className={classes.closing}>\r\n              the Better Friend team{\" \"}\r\n              <span role=\"img\" aria-label=\"heart emoji\">\r\n                ❤️\r\n              </span>\r\n            </Typography>\r\n            <button style={btnStyle} onClick={() => setSubscribeOpen(true)}>Sign Me Up</button>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App.jsx\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}